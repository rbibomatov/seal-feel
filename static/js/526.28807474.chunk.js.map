{"version":3,"file":"static/js/526.28807474.chunk.js","mappings":"8MACA,G,QAA0B,2BAA1B,EAAmE,+BAAnE,EAA6G,2BAA7G,EAAqJ,6BCArJ,EAAyB,uB,mBCazB,EAXe,SAACA,GACd,IAAMC,EAAO,YAAcD,EAAME,GAC3BC,EAAWH,EAAMI,KAEvB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAASC,GAAIN,EAAb,SAAoBE,KAGzB,ECXD,EAA0B,yBCK1B,EAJgB,SAACH,GACf,OAAO,gBAAKK,UAAWC,EAAhB,SAAiCN,EAAMQ,SAC/C,E,UCEKC,EAAiB,SAACT,GACtB,OAA0CU,EAAAA,EAAAA,MAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAOhC,OACE,kBAAMC,SAAUF,GAND,SAACG,GAChBf,EAAMgB,WAAWD,EAAKE,aACtBJ,GACD,IAGC,WACE,uCACMF,EAAS,cAAe,CAC1BO,UAAU,KAFd,IAIEC,KAAK,KACLC,KAAK,IACLC,YAAY,oIAEd,mBAAQC,KAAK,SAAb,mBAGL,EAmCD,EAjCiB,SAACtB,GAChB,IAAIuB,EAAevB,EAAMuB,aAErBC,EAAkBD,EAAaE,QAAQC,KAAI,SAACC,GAC9C,OACE,SAAC,EAAD,CACEzB,GAAIyB,EAAWzB,GAEfE,KAAMuB,EAAWvB,MADZ,UAAYuB,EAAWzB,GAIjC,IACG0B,EAAmBL,EAAaM,SAASH,KAAI,SAACI,GAChD,OACE,SAAC,EAAD,CACE5B,GAAI4B,EAAY5B,GAEhBM,QAASsB,EAAYtB,SADhB,WAAasB,EAAY5B,GAInC,IAED,OACE,iBAAKG,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAAsCkB,KACtC,gBAAKnB,UAAWC,EAAhB,SAAkCsB,KAClC,gBAAKvB,UAAWC,EAAhB,UACE,SAACG,EAAD,CAAgBO,WAAYhB,EAAMgB,iBAIzC,EChDD,GAAee,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAPoB,SAACC,GACrB,MAAO,CACLV,aAAcU,EAAMV,aAEvB,GAG0B,CACvBP,WAAAA,EAAAA,IAEFkB,EAAAA,EAJF,CAKEC,E,4ECbEC,EAAkB,SAACH,GACrB,MAAO,CACLI,OAAQJ,EAAMK,KAAKD,OAEtB,EAcD,IAZyB,SAACE,GASxB,OAAOP,EAAAA,EAAAA,IAAQI,EAARJ,EARmB,SAAChC,GACzB,OAAKA,EAAMqC,QAIJ,SAACE,GAAD,UAAevC,KAHb,SAAC,KAAD,CAAUO,GAAG,UAIvB,GAGF,C","sources":["webpack://seal-feel/./src/components/Content/Messages/Messages.module.css?8c3e","webpack://seal-feel/./src/components/Content/Messages/Dialog/Dialog.module.css?2e48","components/Content/Messages/Dialog/Dialog.jsx","webpack://seal-feel/./src/components/Content/Messages/Message/Message.module.css?cc17","components/Content/Messages/Message/Message.jsx","components/Content/Messages/Messages.jsx","components/Content/Messages/MessagesContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Messages_dialogs__n0pJ5\",\"dialogsItems\":\"Messages_dialogsItems__Y-I0f\",\"messages\":\"Messages_messages__8r9mg\",\"newMessage\":\"Messages_newMessage__iEX3w\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__XYJhc\",\"activeDialog\":\"Dialog_activeDialog__dwMbY\"};","import styles from \"./Dialog.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n  const path = \"/dialogs/\" + props.id;\r\n  const userName = props.name;\r\n\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink to={path}>{userName}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__ZFsXl\"};","import styles from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={styles.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./Messages.module.css\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AddMessageForm = (props) => {\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    props.addMessage(data.messageText);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <textarea\r\n        {...register(\"messageText\", {\r\n          required: true,\r\n        })}\r\n        cols=\"50\"\r\n        rows=\"5\"\r\n        placeholder=\"Введите свое сообщение...\"\r\n      ></textarea>\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Messages = (props) => {\r\n  let messagesPage = props.messagesPage;\r\n\r\n  let dialogsElements = messagesPage.dialogs.map((dialogData) => {\r\n    return (\r\n      <Dialog\r\n        id={dialogData.id}\r\n        key={\"dialog_\" + dialogData.id}\r\n        name={dialogData.name}\r\n      />\r\n    );\r\n  });\r\n  let messagesElements = messagesPage.messages.map((messageData) => {\r\n    return (\r\n      <Message\r\n        id={messageData.id}\r\n        key={\"message_\" + messageData.id}\r\n        message={messageData.message}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>{dialogsElements}</div>\r\n      <div className={styles.messages}>{messagesElements}</div>\r\n      <div className={styles.newMessage}>\r\n        <AddMessageForm addMessage={props.addMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import { compose } from \"redux\";\r\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMessage } from \"../../../redux/messages.reducer\";\r\nimport Messages from \"./Messages\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Messages);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;\r\n"],"names":["props","path","id","userName","name","className","styles","to","message","AddMessageForm","useForm","register","handleSubmit","reset","onSubmit","data","addMessage","messageText","required","cols","rows","placeholder","type","messagesPage","dialogsElements","dialogs","map","dialogData","messagesElements","messages","messageData","compose","connect","state","withAuthRedirect","Messages","mapStateToProps","isAuth","auth","Component"],"sourceRoot":""}