{"version":3,"file":"static/js/394.8bd7e7b4.chunk.js","mappings":"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","sources":["webpack://seal-feel/./src/components/Content/Messages/Messages.module.css?8c3e","webpack://seal-feel/./src/components/Content/Messages/Dialog/Dialog.module.css?2e48","components/Content/Messages/Dialog/Dialog.jsx","webpack://seal-feel/./src/components/Content/Messages/Message/Message.module.css?cc17","components/Content/Messages/Message/Message.jsx","components/Forms/AddMessageForm/AddMessageForm.jsx","components/Content/Messages/Messages.jsx","hoc/withAuthRedirect.jsx","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Messages_dialogs__n0pJ5\",\"dialogsItems\":\"Messages_dialogsItems__Y-I0f\",\"messages\":\"Messages_messages__8r9mg\",\"newMessage\":\"Messages_newMessage__iEX3w\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__XYJhc\",\"activeDialog\":\"Dialog_activeDialog__dwMbY\"};","import styles from \"./Dialog.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n  const path = \"/dialogs/\" + props.id;\r\n  const userName = props.name;\r\n\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink to={path}>{userName}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__ZFsXl\"};","import styles from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={styles.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addMessage } from \"../../../redux/messages.reducer\";\r\n\r\nconst AddMessageForm = (props) => {\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(addMessage(data.messageText));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <textarea\r\n        {...register(\"messageText\", {\r\n          required: true,\r\n        })}\r\n        cols=\"50\"\r\n        rows=\"5\"\r\n        placeholder=\"Введите свое сообщение...\"\r\n      ></textarea>\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddMessageForm;\r\n","import styles from \"./Messages.module.css\";\r\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AddMessageForm from \"../../Forms/AddMessageForm/AddMessageForm\";\r\n\r\nconst Messages = (props) => {\r\n  const messagesPage = useSelector((state) => state.messagesPage);\r\n\r\n  let dialogsElements = messagesPage.dialogs.map((dialogData) => {\r\n    return <Dialog id={dialogData.id} key={uuidv4()} name={dialogData.name} />;\r\n  });\r\n  let messagesElements = messagesPage.messages.map((messageData) => {\r\n    return (\r\n      <Message\r\n        id={messageData.id}\r\n        key={uuidv4()}\r\n        message={messageData.message}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>{dialogsElements}</div>\r\n      <div className={styles.messages}>{messagesElements}</div>\r\n      <div className={styles.newMessage}>\r\n        <AddMessageForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthRedirect(Messages);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["props","path","id","userName","name","className","styles","to","message","useForm","register","handleSubmit","reset","dispatch","useDispatch","onSubmit","data","addMessage","messageText","required","cols","rows","placeholder","type","withAuthRedirect","messagesPage","useSelector","state","dialogsElements","dialogs","map","dialogData","uuidv4","messagesElements","messages","messageData","mapStateToProps","isAuth","auth","Component","connect","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}