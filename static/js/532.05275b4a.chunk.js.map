{"version":3,"file":"static/js/532.05275b4a.chunk.js","mappings":"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","sources":["webpack://seal-feel/./src/components/Content/Profile/ProfileInfo/ProfileInfo.module.css?44c3","webpack://seal-feel/./src/components/Content/Profile/ProfileInfo/ProfilePhotoBar/ProfilePhotoBar.module.css?d96a","components/Content/Profile/ProfileInfo/ProfilePhotoBar/ProfilePhotoBar.jsx","webpack://seal-feel/./src/components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?4153","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","webpack://seal-feel/./src/components/Content/Profile/ProfileInfo/ProfileDescriptionBlock/DescriptionBlock.module.css?6e4c","components/Content/Profile/ProfileInfo/ProfileDescriptionBlock/DescriptionBlock.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","webpack://seal-feel/./src/components/Content/Profile/MyPosts/MyPosts.module.css?2f9f","webpack://seal-feel/./src/components/Content/Profile/MyPosts/Post/Post.module.css?633c","components/Content/Profile/MyPosts/Post/Post.jsx","webpack://seal-feel/./src/components/Forms/AddPostForm/AddPostForm.module.css?dec6","components/Forms/AddPostForm/AddPostForm.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/Profile.jsx","hoc/withAuthRedirect.jsx","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__pIdwp\",\"profileName\":\"ProfileInfo_profileName__0xrcz\",\"profileDescription\":\"ProfileInfo_profileDescription__+VeZ3\"};","// extracted by mini-css-extract-plugin\nexport default {\"avatarBar\":\"ProfilePhotoBar_avatarBar__0Qkr-\",\"profileAvatar\":\"ProfilePhotoBar_profileAvatar__bsWh8\",\"changeAvatarButton\":\"ProfilePhotoBar_changeAvatarButton__fNCcw\"};","import styles from \"./ProfilePhotoBar.module.css\";\r\nimport defaultAvatar from \"./../../../../../images/Common/DefaultUserAvatar.png\";\r\n\r\nconst ProfilePhotoBar = (props) => {\r\n  const onAvatarSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.saveUserAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.avatarBar}>\r\n      <img\r\n        className={styles.profileAvatar}\r\n        src={props.profilePhoto || defaultAvatar}\r\n        alt=\"Аватар пользователя\"\r\n      />\r\n      {props.isOnwer && (\r\n        <div>\r\n          <input\r\n            className={styles.changeAvatarButton}\r\n            type=\"file\"\r\n            onChange={onAvatarSelected}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePhotoBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"statusBar\":\"ProfileStatus_statusBar__Ldszt\",\"showModeStatusBar\":\"ProfileStatus_showModeStatusBar__DBIW0\",\"editModeStatusBar\":\"ProfileStatus_editModeStatusBar__QwgzV\"};","import { useState, useEffect } from \"react\";\r\nimport styles from \"./ProfileStatus.module.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const showStatusElement = (\r\n    <span\r\n      className={props.isOnwer ? styles.showModeStatusBar : \"\"}\r\n      onClick={() => {\r\n        if (props.isOnwer) {\r\n          setEditMode(true);\r\n        }\r\n      }}\r\n    >\r\n      {status ? status : props.isOnwer ? \"Укажите ваш статус...\" : \"\"}\r\n    </span>\r\n  );\r\n\r\n  const editStatusElement = (\r\n    <input\r\n      className={styles.editModeStatusBar}\r\n      maxLength=\"300\"\r\n      autoFocus={true}\r\n      onBlur={() => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n      }}\r\n      onChange={(e) => {\r\n        setStatus(e.currentTarget.value);\r\n      }}\r\n      value={status}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className={styles.statusBar}>\r\n      {editMode ? editStatusElement : showStatusElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"DescriptionBlock_descriptionBlock__DOxKo\",\"descriptionInfo\":\"DescriptionBlock_descriptionInfo__XgLrz\",\"descriptionName\":\"DescriptionBlock_descriptionName__9qXEh\",\"descriptionItem\":\"DescriptionBlock_descriptionItem__WZh29\",\"descriptionItemHeader\":\"DescriptionBlock_descriptionItemHeader__Hb8m8\"};","import styles from \"./DescriptionBlock.module.css\";\r\n\r\nconst DescriptionBlock = (props) => {\r\n  const showDescriptionContent = (descriptionData, createRef) => {\r\n    const itemHeaders = descriptionData[0];\r\n    const profileData = descriptionData[1];\r\n\r\n    let descriptionItems = [],\r\n      emptyDataCount = 0,\r\n      noDataElement = <div>Информация отсутствует</div>;\r\n\r\n    for (let i = 0; i < profileData.length; i++) {\r\n      let profileElement = profileData[i];\r\n\r\n      if (profileElement) {\r\n        if (typeof profileElement === \"boolean\") {\r\n          profileElement = profileElement ? \"Да\" : \"Нет\";\r\n        }\r\n\r\n        descriptionItems.push(\r\n          <div className={styles.descriptionItem}>\r\n            <span className={styles.descriptionItemHeader}>\r\n              {itemHeaders[i] + \":\"}\r\n            </span>\r\n            {createRef ? (\r\n              <a\r\n                href={\"https://\" + profileElement}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                {profileElement}\r\n              </a>\r\n            ) : (\r\n              <span>{profileElement}</span>\r\n            )}\r\n          </div>\r\n        );\r\n      } else {\r\n        emptyDataCount++;\r\n      }\r\n    }\r\n\r\n    return emptyDataCount === profileData.length\r\n      ? noDataElement\r\n      : descriptionItems;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.descriptionBlock}>\r\n      <div className={styles.descriptionInfo}>\r\n        <div className={styles.descriptionName}>{props.descriptionName}</div>\r\n        {showDescriptionContent(props.descriptionData, props.descriptionRef)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DescriptionBlock;\r\n","import styles from \"./ProfileInfo.module.css\";\r\nimport PhotoBar from \"./ProfilePhotoBar/ProfilePhotoBar\";\r\nimport StatusBar from \"./ProfileStatus/ProfileStatus\";\r\nimport DescriptionBlock from \"./ProfileDescriptionBlock/DescriptionBlock\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  const profile = props.profilePage.profile;\r\n  const contacts = profile.contacts;\r\n\r\n  const aboutMeData = [\r\n    [\"Статус\", \"Ищу работу\", \"Описание исковой работы\"],\r\n    [\r\n      profile.aboutMe,\r\n      profile.lookingForAJob,\r\n      profile.lookingForAJobDescription,\r\n    ],\r\n  ];\r\n  const contactsData = [\r\n    [\"Facebook\", \"Website\", \"VK\", \"Twitter\", \"Instagram\", \"Youtube\", \"Github\"],\r\n    [\r\n      contacts.facebook,\r\n      contacts.website,\r\n      contacts.vk,\r\n      contacts.twitter,\r\n      contacts.instagram,\r\n      contacts.youtube,\r\n      contacts.github,\r\n    ],\r\n  ];\r\n\r\n  return (\r\n    <div className={styles.profileInfo}>\r\n      <PhotoBar\r\n        isOnwer={props.isOnwer}\r\n        profilePhoto={profile.photos.large}\r\n        saveUserAvatar={props.saveUserAvatar}\r\n      />\r\n\r\n      <div className={styles.profileDescription}>\r\n        <div className={styles.profileName}>{profile?.fullName}</div>\r\n        <StatusBar\r\n          isOnwer={props.isOnwer}\r\n          status={props.profilePage.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n        <DescriptionBlock\r\n          descriptionName=\"Обо мне\"\r\n          descriptionData={aboutMeData}\r\n        />\r\n        <DescriptionBlock\r\n          descriptionName=\"Контакты\"\r\n          descriptionData={contactsData}\r\n          descriptionRef={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__Glpxs\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__HR20V\",\"userAvatar\":\"Post_userAvatar__wm7K3\",\"postText\":\"Post_postText__PnMPV\",\"textAuthor\":\"Post_textAuthor__-dwe5\",\"textMessage\":\"Post_textMessage__kXwzl\",\"postTime\":\"Post_postTime__GO6PX\"};","import styles from \"./Post.module.css\";\r\nimport defaultAvatar from \"./../../../../../images/Common/DefaultUserAvatar.png\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <img\r\n        className={styles.userAvatar}\r\n        src={props.currentUserPhoto || defaultAvatar}\r\n        alt=\"\"\r\n      />\r\n      <div className={styles.postText}>\r\n        <div className={styles.textAuthor}>{props.currentUserLogin}</div>\r\n        <div className={styles.textMessage}>{props.message}</div>\r\n        <div className={styles.postTime}>\r\n          {props.createTime.toTimeString().slice(0, 5)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addPostForm\":\"AddPostForm_addPostForm__NVk36\",\"postTextArea\":\"AddPostForm_postTextArea__-YOhc\"};","import styles from \"./AddPostForm.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPost } from \"../../../redux/profile.reducer\";\r\n\r\nconst AddPostForm = (props) => {\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(addPost(data.postText, props.profileId));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={styles.addPostForm} onSubmit={handleSubmit(onSubmit)}>\r\n      <textarea\r\n        className={styles.postTextArea}\r\n        {...register(\"postText\", {\r\n          required: true,\r\n        })}\r\n        placeholder=\"Расскажите что-нибудь интересное!\"\r\n      ></textarea>\r\n      <div>\r\n        <button type=\"submit\">Опубликовать</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddPostForm;\r\n","import styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post.jsx\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AddPostForm from \"../../../Forms/AddPostForm/AddPostForm\";\r\n\r\nconst MyPosts = (props) => {\r\n  const postsElements = props.posts.reduce((posts, post) => {\r\n    if (props.profileId === post.profileId) {\r\n      posts.push(\r\n        <Post\r\n          key={uuidv4()}\r\n          message={post.message}\r\n          createTime={post.createTime}\r\n          currentUserLogin={props.currentUserLogin}\r\n          currentUserPhoto={props.currentUserPhoto}\r\n        />\r\n      );\r\n    }\r\n\r\n    return posts;\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.myPosts}>\r\n      <AddPostForm addPost={props.addPost} profileId={props.profileId} />\r\n      {postsElements}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { compose } from \"redux\";\r\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserData,\r\n  updateStatus,\r\n  saveAvatar,\r\n} from \"../../../redux/profile.reducer\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\n\r\nconst Profile = (props) => {\r\n  const { profileId } = useParams();\r\n\r\n  useEffect(() => {\r\n    props.getUserData(profileId);\r\n  }, [profileId]);\r\n\r\n  if (!props.profilePage.profileInProgress && props.profilePage.profile) {\r\n    return (\r\n      <div>\r\n        <ProfileInfo {...props} isOnwer={props.currentUserId === profileId} />\r\n        <MyPosts\r\n          posts={props.profilePage.posts}\r\n          currentUserLogin={props.currentUserLogin}\r\n          currentUserPhoto={props.currentUserPhoto}\r\n          profileId={profileId}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Preloader />;\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n    currentUserId: state.auth.currentUser.id,\r\n    currentUserLogin: state.auth.currentUser.login,\r\n    currentUserPhoto: state.auth.currentUser.photo,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserData, updateStatus, saveAvatar }),\r\n  withAuthRedirect\r\n)(Profile);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;"],"names":["props","className","styles","src","profilePhoto","defaultAvatar","alt","isOnwer","type","onChange","e","target","files","length","saveUserAvatar","useState","editMode","setEditMode","status","setStatus","useEffect","showStatusElement","onClick","editStatusElement","maxLength","autoFocus","onBlur","updateStatus","currentTarget","value","descriptionName","descriptionData","createRef","itemHeaders","profileData","descriptionItems","emptyDataCount","noDataElement","i","profileElement","push","href","rel","showDescriptionContent","descriptionRef","profile","profilePage","contacts","aboutMeData","aboutMe","lookingForAJob","lookingForAJobDescription","contactsData","facebook","website","vk","twitter","instagram","youtube","github","photos","large","fullName","currentUserPhoto","currentUserLogin","message","createTime","toTimeString","slice","useForm","register","handleSubmit","reset","dispatch","useDispatch","onSubmit","data","addPost","postText","profileId","required","placeholder","postsElements","posts","reduce","post","uuidv4","compose","connect","state","currentUserId","auth","currentUser","id","login","photo","getUserData","saveAvatar","withAuthRedirect","useParams","profileInProgress","Preloader","mapStateToProps","isAuth","Component","to","getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","toString","unsafeStringify","arr","offset","toLowerCase","options","buf","native","rnds","random"],"sourceRoot":""}