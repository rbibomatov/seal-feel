{"version":3,"file":"static/js/993.33496796.chunk.js","mappings":"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","sources":["webpack://seal-feel/./src/components/Content/Profile/ProfileInfo/ProfileInfo.module.css?44c3","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","webpack://seal-feel/./src/components/Content/Profile/MyPosts/MyPosts.module.css?2f9f","webpack://seal-feel/./src/components/Content/Profile/MyPosts/Post/Post.module.css?633c","components/Content/Profile/MyPosts/Post/Post.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__pIdwp\",\"profileBackground\":\"ProfileInfo_profileBackground__PHNmD\",\"profileAvatar\":\"ProfileInfo_profileAvatar__qQeFi\",\"profileName\":\"ProfileInfo_profileName__0xrcz\",\"profileDescription\":\"ProfileInfo_profileDescription__+VeZ3\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__xzxSV\",\"descriptionInfo\":\"ProfileInfo_descriptionInfo__51H27\",\"descriptionName\":\"ProfileInfo_descriptionName__OORJ-\",\"descriptionItem\":\"ProfileInfo_descriptionItem__bbHtf\",\"descriptionItemHeader\":\"ProfileInfo_descriptionItemHeader__xvTmO\"};","import { useState, useEffect } from \"react\";\r\nimport styles from \"./ProfileStatus.module.css\";\r\n\r\nconst ProfileStatus = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activeEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactiveEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            maxLength=\"300\"\r\n            autoFocus={true}\r\n            onChange={onStatusChange}\r\n            onBlur={deactiveEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n      {!editMode && (\r\n        <div>\r\n          <span onClick={activeEditMode}>{status}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import styles from \"./ProfileInfo.module.css\";\r\nimport profileBackground from \"./../../../../images/Content/Profile/ProfileBackground.jpg\";\r\nimport defaultAvatar from \"./../../../../images/Common/DefaultUserAvatar.png\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  let profile = props.profile,\r\n    contacts = props.profile?.contacts;\r\n\r\n  const showAvatar = (profilePhoto) => {\r\n    let profileAvatar;\r\n\r\n    if (profilePhoto) {\r\n      profileAvatar = profilePhoto;\r\n    } else {\r\n      profileAvatar = defaultAvatar;\r\n    }\r\n\r\n    return profileAvatar;\r\n  };\r\n\r\n  const showDescriptionContent = (itemHeader, profileData, createRef) => {\r\n    if (profile) {\r\n      let descriptionItems = [],\r\n        emptyDataCount = 0,\r\n        noDataElement = <div>Информация отсутствует</div>;\r\n\r\n      for (let i = 0; i < profileData.length; i++) {\r\n        let profileElement = profileData[i];\r\n\r\n        if (profileElement) {\r\n          if (typeof profileElement === \"boolean\") {\r\n            profileElement = profileElement ? \"Да\" : \"Нет\";\r\n          }\r\n\r\n          descriptionItems.push(\r\n            <div className={styles.descriptionItem}>\r\n              <span className={styles.descriptionItemHeader}>\r\n                {itemHeader[i] + \":\"}\r\n              </span>\r\n              {createRef ? (\r\n                <a\r\n                  href={\"https://\" + profileElement}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {profileElement}\r\n                </a>\r\n              ) : (\r\n                <span>{profileElement}</span>\r\n              )}\r\n            </div>\r\n          );\r\n        } else {\r\n          emptyDataCount++;\r\n        }\r\n      }\r\n\r\n      return emptyDataCount === profileData.length\r\n        ? noDataElement\r\n        : descriptionItems;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.profileInfo}>\r\n      <img\r\n        className={styles.profileBackground}\r\n        src={profileBackground}\r\n        alt=\"Фон профиля\"\r\n      />\r\n      {\r\n        // eslint-disable-next-line jsx-a11y/alt-text\r\n        <img\r\n          className={styles.profileAvatar}\r\n          src={showAvatar(profile?.photos.large)}\r\n        />\r\n      }\r\n      <div className={styles.profileDescription}>\r\n        <div className={styles.profileName}>{profile?.fullName}</div>\r\n        <ProfileStatus\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n        <div className={styles.descriptionBlock}>\r\n          <div className={styles.descriptionInfo}>\r\n            <div className={styles.descriptionName}>Обо мне:</div>\r\n            {showDescriptionContent(\r\n              [\"Статус\", \"Ищу работу\", \"Описание исковой работы\"],\r\n              [\r\n                profile?.aboutMe,\r\n                profile?.lookingForAJob,\r\n                profile?.lookingForAJobDescription,\r\n              ]\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className={styles.descriptionBlock}>\r\n          <div className={styles.descriptionInfo}>\r\n            <div className={styles.descriptionName}>Контакты:</div>\r\n            {showDescriptionContent(\r\n              [\r\n                \"Facebook\",\r\n                \"Website\",\r\n                \"VK\",\r\n                \"Twitter\",\r\n                \"Instagram\",\r\n                \"Youtube\",\r\n                \"Github\",\r\n              ],\r\n              [\r\n                contacts?.facebook,\r\n                contacts?.website,\r\n                contacts?.vk,\r\n                contacts?.twitter,\r\n                contacts?.instagram,\r\n                contacts?.youtube,\r\n                contacts?.github,\r\n              ],\r\n              true\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"MyPosts_myPosts__Glpxs\",\"addPostForm\":\"MyPosts_addPostForm__PrfsG\",\"postTextArea\":\"MyPosts_postTextArea__tZz-n\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__HR20V\",\"userAvatar\":\"Post_userAvatar__wm7K3\",\"postText\":\"Post_postText__PnMPV\",\"textAuthor\":\"Post_textAuthor__-dwe5\",\"textMessage\":\"Post_textMessage__kXwzl\",\"postTime\":\"Post_postTime__GO6PX\"};","import styles from \"./Post.module.css\";\r\nimport defaultAvatar from \"./../../../../../images/Common/DefaultUserAvatar.png\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.post}>\r\n      <img className={styles.userAvatar} src={defaultAvatar} alt=\"\" />\r\n      <div className={styles.postText}>\r\n        <div className={styles.textAuthor}>Диана Мирошкина</div>\r\n        <div className={styles.textMessage}>{props.message}</div>\r\n        <div className={styles.postTime}>\r\n          {props.createTime.toTimeString().slice(0, 5)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport styles from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post.jsx\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst AddPostForm = (props) => {\r\n  const { register, handleSubmit, reset } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    props.addPost(data.postText);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={styles.addPostForm} onSubmit={handleSubmit(onSubmit)}>\r\n      <textarea\r\n        className={styles.postTextArea}\r\n        {...register(\"postText\", {\r\n          required: true,\r\n        })}\r\n        placeholder=\"Расскажите, как у вас дела?\"\r\n      ></textarea>\r\n      <div>\r\n        <button type=\"submit\">Опубликовать</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MyPosts = (props) => {\r\n  let profilePage = props.profilePage;\r\n\r\n  let postsElements = profilePage.posts.map((post) => {\r\n    return (\r\n      <Post\r\n        id={post.id}\r\n        key={\"post_\" + post.id}\r\n        message={post.message}\r\n        createTime={post.createTime}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.myPosts}>\r\n      <AddPostForm addPost={props.addPost} />\r\n      {postsElements}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPost } from \"../../../../redux/profile.reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { compose } from \"redux\";\r\nimport withAuthRedirect from \"../../../hoc/withAuthRedirect\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserData, updateUserStatus } from \"../../../redux/profile.reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.params.userId;\r\n    this.props.getUserData(userId);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    let prevUserId = prevProps.params.userId;\r\n    let userId = this.props.params.userId;\r\n    if (prevUserId !== userId) {\r\n      this.props.getUserData(userId);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} updateStatus={this.props.updateUserStatus} />\r\n    );\r\n  }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let params = useParams();\r\n    return <Component {...props} params={params} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserData, updateUserStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  const RedirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","maxLength","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","onClick","profilePhoto","profile","contacts","showDescriptionContent","itemHeader","profileData","createRef","descriptionItems","emptyDataCount","noDataElement","i","length","profileElement","push","className","styles","href","target","rel","src","profileBackground","alt","photos","large","defaultAvatar","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","facebook","website","vk","twitter","instagram","youtube","github","message","createTime","toTimeString","slice","AddPostForm","useForm","register","handleSubmit","reset","onSubmit","data","addPost","postText","required","placeholder","type","postsElements","profilePage","posts","map","post","id","connect","state","MyPosts","ProfileContainer","userId","this","params","getUserData","prevProps","prevUserId","updateUserStatus","React","compose","Component","useParams","withAuthRedirect","mapStateToProps","isAuth","auth","to"],"sourceRoot":""}